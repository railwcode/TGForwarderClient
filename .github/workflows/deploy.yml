---
name: 🏃 Deploy to remote server

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: "3.9"
      PLAYBOOKS_DIR: playbooks
      PREPARATION_DIR: preparation
      ANSIBLE_VERSION: 4.3.0

    steps:
      -
        name: 🐍 Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      -
        name: 👯‍ Checkout
        uses: actions/checkout@v3
      -
        name: Check cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ansible-${{ env.ANSIBLE_VERSION }}-docker-5.0.0
      -
        name: 🍺 Install dependencies
        run: |
          sudo apt-get install rsync
          pip install ansible~=${{ env.ANSIBLE_VERSION }} docker~=5.0.0
      -
        name: 🗃️ Prepare files for deployment
        run: |
          mkdir -v ${{ env.PREPARATION_DIR }}
          cp -v  docker-compose.yml  ${{ env.PREPARATION_DIR }}/
      -
        name: 🗝️ Write private key
        env:
          PRIVATE_DEPLOY_KEY: ${{ secrets.PRIVATE_DEPLOY_KEY }}
        run: |
          echo "$PRIVATE_DEPLOY_KEY" > ci_id_rsa
          chmod -v 600 ci_id_rsa
      -
        name: 🙈 Create Ansible inventory
        run: |
          echo "${{ secrets.REPO_DEPLOYMENT_HOST }}" > hosts
      -
        name: 📦 Delivery to remote server
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'false'
        run: |
          eval $(ssh-agent -s) && ssh-add ci_id_rsa
          ansible-playbook  \
            --inventory hosts  \
            --user ${{ secrets.PRIVATE_DEPLOY_USER }}  \
            ansible/delivery.yml  \
              --extra-vars "deploy_dir_src=$PWD/${{ env.PREPARATION_DIR }}/  \
                bot_api_id=${{ secrets.API_ID }}  \
                bot_api_hash=${{ secrets.API_HASH }}  \
                bot_session_key=${{ secrets.SESSION_KEY }}"
